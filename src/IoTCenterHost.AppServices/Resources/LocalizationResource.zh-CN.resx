<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BadUserInput" xml:space="preserve">
    <value>用户登录失败</value>
  </data>
  <data name="UserUseExpiredTime" xml:space="preserve">
    <value>用户使用时间已到期</value>
  </data>
  <data name="FailToCopyDataFile" xml:space="preserve">
    <value>从databak文件夹复制数据库文件到database文件夹中</value>
  </data>
  <data name="FailToFindDatabakFile" xml:space="preserve">
    <value>databak文件夹中没有发现数据库文件</value>
  </data>
  <data name="FailToFindDatabaseFile" xml:space="preserve">
    <value>database文件夹中没有发现数据库文件</value>
  </data>
  <data name="FailToReadGrpcConfig" xml:space="preserve">
    <value>在AlarmCenterProperties.xml文件中未读取到配置【HostServer:EnableGrpc】项，已使用appsetting.json中的默认配置</value>
  </data>
  <data name="FailToResetTimingTask" xml:space="preserve">
    <value>重置定时任务失败</value>
  </data>
  <data name="FailToStartGW" xml:space="preserve">
    <value>网关启动失败，请查看系统日志.</value>
  </data>
  <data name="FailToVerifyLiscense" xml:space="preserve">
    <value>系统没有授权，请检查您的许可，或与软件销售商联系.</value>
  </data>
  <data name="InvalidModule" xml:space="preserve">
    <value>该模块不具备许可，暂不可用，请与销售联系</value>
  </data>
  <data name="LoginFail" xml:space="preserve">
    <value>登录失败，用户名或密码错误</value>
  </data>
  <data name="PluginInstalled" xml:space="preserve">
    <value>插件安装完成</value>
  </data>
  <data name="PluginInstallFail" xml:space="preserve">
    <value>插件安装失败</value>
  </data>
  <data name="supportweb" xml:space="preserve">
    <value>支持Web页面</value>
  </data>
  <data name="support3d" xml:space="preserve">
    <value>支持动态3D</value>
  </data>
  <data name="supportzhutai" xml:space="preserve">
    <value>支持组态页面</value>
  </data>
  <data name="supportmobile" xml:space="preserve">
    <value>支持移动平台</value>
  </data>
  <data name="user" xml:space="preserve">
    <value>用户</value>
  </data>
  <data name="LoginSuccess" xml:space="preserve">
    <value>登录平台成功！</value>
  </data>
  <data name="IoTCenterHasBeenLaunched" xml:space="preserve">
    <value>IoTCenter网关数据采集平台已启动.</value>
  </data>
  <data name="IoTCenterLaunchException" xml:space="preserve">
    <value>网关启动失败，异常信息：</value>
  </data>
</root>